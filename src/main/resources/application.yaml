spring:
  profiles:
    active: local
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 411922572522-amjb41f97ahgnbq06jiicm13pt33nrg6.apps.googleusercontent.com
            client-secret: NP3ICbi4VpnrAAdUS5aAgK4u
  datasource:
    initialization-mode: always
  data:
    rest:
      base-path: /api
  jpa:
    ## 추후 DDL이 필요없을 경우 삭제. 초기 테스트/빌드 업 시에만 사용해볼 것.
    hibernate:
      # Hibernate ddl auto (create, create-drop, validate, update)
      ddl-auto: create-drop
    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  devtools:
    livereload:
      enabled: true

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE

---
spring:
  profiles: local
  data:
    mongodb:
      uri: mongodb://localhost:27017/spring_database
  datasource:
    platform: mariadb
    url: jdbc:mariadb://localhost:3306/spring_database
    username: "root"
    password: "!@coLLiGEnce#$"
    dbcp2:
      driver-class-name: org.mariadb.jdbc.Driver

---
spring:
  profiles: dev
  data:
    mongodb:
      uri: mongodb://192.168.0.20:27017/spring_database
  datasource:
    url: jdbc:mariadb://192.168.0.20:3306/spring_database
    username: "root"
    password: "!@coLLiGEnce#$"
    dbcp2:
      driver-class-name: org.mariadb.jdbc.Driver

#---
#spring:
#  profiles: prod
#  data:
#    mongodb:
#      uri: mongodb://spring_user:112233@192.168.0.20/spring_database
#      authentication-database: spring_database
#  datasource:
#    url: jdbc:mariadb://192.168.0.20:4306/spring_database
#    username: root
#    password: 112233
#    dbcp2:
#      driver-class-name: org.mariadb.jdbc.Driver

---
spring:
  profiles: docker-build
  data:
    mongodb:
      uri: mongodb://mongodb.local:27017/spring_database
  datasource:
    url: jdbc:mariadb://mariadb.local:3306/spring_database
    username: "root"
    password: "!@coLLiGEnce#$"
    dbcp2:
      driver-class-name: org.mariadb.jdbc.Driver
